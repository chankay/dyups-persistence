package xyz.grafana.dyupspersistence.dao;

import xyz.grafana.dyupspersistence.model.UpstreamConfig;
import xyz.grafana.dyupspersistence.model.UpstreamConfigExample;
import xyz.grafana.dyupspersistence.model.UpstreamConfigWithBLOBs;
import java.util.List;

import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Repository;

@Mapper
@Repository
public interface UpstreamConfigMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table upstream_config
     *
     * @mbg.generated
     */
    @SelectProvider(type=UpstreamConfigSqlProvider.class, method="countByExample")
    long countByExample(UpstreamConfigExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table upstream_config
     *
     * @mbg.generated
     */
    @DeleteProvider(type=UpstreamConfigSqlProvider.class, method="deleteByExample")
    int deleteByExample(UpstreamConfigExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table upstream_config
     *
     * @mbg.generated
     */
    @Delete({
        "delete from upstream_config",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table upstream_config
     *
     * @mbg.generated
     */
    @Insert({
        "insert into upstream_config (name, comment, ",
        "is_delete, upstream, ",
        "server)",
        "values (#{name,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, ",
        "#{isDelete,jdbcType=BIT}, #{upstream,jdbcType=LONGVARCHAR}, ",
        "#{server,jdbcType=LONGVARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(UpstreamConfigWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table upstream_config
     *
     * @mbg.generated
     */
    @InsertProvider(type=UpstreamConfigSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(UpstreamConfigWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table upstream_config
     *
     * @mbg.generated
     */
    @SelectProvider(type=UpstreamConfigSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment", property="comment", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_delete", property="isDelete", jdbcType=JdbcType.BIT),
        @Result(column="upstream", property="upstream", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="server", property="server", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<UpstreamConfigWithBLOBs> selectByExampleWithBLOBs(UpstreamConfigExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table upstream_config
     *
     * @mbg.generated
     */
    @SelectProvider(type=UpstreamConfigSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment", property="comment", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_delete", property="isDelete", jdbcType=JdbcType.BIT)
    })
    List<UpstreamConfig> selectByExample(UpstreamConfigExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table upstream_config
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, name, comment, is_delete, upstream, server",
        "from upstream_config",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment", property="comment", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_delete", property="isDelete", jdbcType=JdbcType.BIT),
        @Result(column="upstream", property="upstream", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="server", property="server", jdbcType=JdbcType.LONGVARCHAR)
    })
    UpstreamConfigWithBLOBs selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table upstream_config
     *
     * @mbg.generated
     */
    @UpdateProvider(type=UpstreamConfigSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") UpstreamConfigWithBLOBs record, @Param("example") UpstreamConfigExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table upstream_config
     *
     * @mbg.generated
     */
    @UpdateProvider(type=UpstreamConfigSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("record") UpstreamConfigWithBLOBs record, @Param("example") UpstreamConfigExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table upstream_config
     *
     * @mbg.generated
     */
    @UpdateProvider(type=UpstreamConfigSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") UpstreamConfig record, @Param("example") UpstreamConfigExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table upstream_config
     *
     * @mbg.generated
     */
    @UpdateProvider(type=UpstreamConfigSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(UpstreamConfigWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table upstream_config
     *
     * @mbg.generated
     */
    @Update({
        "update upstream_config",
        "set name = #{name,jdbcType=VARCHAR},",
          "comment = #{comment,jdbcType=VARCHAR},",
          "is_delete = #{isDelete,jdbcType=BIT},",
          "upstream = #{upstream,jdbcType=LONGVARCHAR},",
          "server = #{server,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKeyWithBLOBs(UpstreamConfigWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table upstream_config
     *
     * @mbg.generated
     */
    @Update({
        "update upstream_config",
        "set name = #{name,jdbcType=VARCHAR},",
          "comment = #{comment,jdbcType=VARCHAR},",
          "is_delete = #{isDelete,jdbcType=BIT}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(UpstreamConfig record);

    @Select({"select * from upstream_config"})
    List<UpstreamConfigWithBLOBs> getConfig();
}